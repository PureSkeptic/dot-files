font pango:JetBrainsMono Nerd Font 12
set $mod Mod4
workspace_layout default
#border indicator on windows:
new_window pixel 1
# thin borders
# hide_edge_borders both
# Set inner/outer gaps
gaps inner 6
gaps outer 3

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# switch/iterate between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# switch to workspace
bindcode $mod+10    workspace  $ws1
bindcode $mod+11    workspace  $ws2
bindcode $mod+12    workspace  $ws3
bindcode $mod+13    workspace  $ws4
bindcode $mod+14    workspace  $ws5
bindcode $mod+15    workspace  $ws6
bindcode $mod+16    workspace  $ws7
bindcode $mod+17    workspace  $ws8
bindcode $mod+18    workspace  $ws9
bindcode $mod+19    workspace  $ws10

# switch to workspace with numpad keys
bindcode $mod+87 workspace $ws1
bindcode $mod+88 workspace $ws2
bindcode $mod+89 workspace $ws3
bindcode $mod+83 workspace $ws4
bindcode $mod+84 workspace $ws5
bindcode $mod+85 workspace $ws6
bindcode $mod+79 workspace $ws7
bindcode $mod+80 workspace $ws8
bindcode $mod+81 workspace $ws9
bindcode $mod+90 workspace $ws10

# switch to workspace with numlock numpad keys
bindcode $mod+Mod2+87 workspace $ws1
bindcode $mod+Mod2+88 workspace $ws2
bindcode $mod+Mod2+89 workspace $ws3
bindcode $mod+Mod2+83 workspace $ws4
bindcode $mod+Mod2+84 workspace $ws5
bindcode $mod+Mod2+85 workspace $ws6
bindcode $mod+Mod2+79 workspace $ws7
bindcode $mod+Mod2+80 workspace $ws8
bindcode $mod+Mod2+81 workspace $ws9
bindcode $mod+Mod2+90 workspace $ws10

# move focused container to workspace
bindcode $mod+Shift+10    move container to workspace  $ws1
bindcode $mod+Shift+11    move container to workspace  $ws2
bindcode $mod+Shift+12    move container to workspace  $ws3
bindcode $mod+Shift+13    move container to workspace  $ws4
bindcode $mod+Shift+14    move container to workspace  $ws5
bindcode $mod+Shift+15    move container to workspace  $ws6
bindcode $mod+Shift+16    move container to workspace  $ws7
bindcode $mod+Shift+17    move container to workspace  $ws8
bindcode $mod+Shift+18    move container to workspace  $ws9
bindcode $mod+Shift+19    move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+Mod2+87 	move container to workspace  $ws1
bindcode $mod+Shift+Mod2+88 	move container to workspace  $ws2
bindcode $mod+Shift+Mod2+89 	move container to workspace  $ws3
bindcode $mod+Shift+Mod2+83 	move container to workspace  $ws4
bindcode $mod+Shift+Mod2+84 	move container to workspace  $ws5
bindcode $mod+Shift+Mod2+85 	move container to workspace  $ws6
bindcode $mod+Shift+Mod2+79 	move container to workspace  $ws7
bindcode $mod+Shift+Mod2+80 	move container to workspace  $ws8
bindcode $mod+Shift+Mod2+81 	move container to workspace  $ws9
bindcode $mod+Shift+Mod2+90 	move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+87 	 move container to workspace  $ws1
bindcode $mod+Shift+88 	 move container to workspace  $ws2
bindcode $mod+Shift+89 	 move container to workspace  $ws3
bindcode $mod+Shift+83 	 move container to workspace  $ws4
bindcode $mod+Shift+84 	 move container to workspace  $ws5
bindcode $mod+Shift+85 	 move container to workspace  $ws6
bindcode $mod+Shift+79 	 move container to workspace  $ws7
bindcode $mod+Shift+80 	 move container to workspace  $ws8
bindcode $mod+Shift+81 	 move container to workspace  $ws9
bindcode $mod+Shift+90 	 move container to workspace  $ws10

# resize window (you can also use the mouse for that):
#mode "resize" {
# These bindings trigger as soon as you enter the resize mode
# Pressing left will shrink the window's width.
# Pressing right will grow the window's width.
# Pressing up will shrink the window's height.
# Pressing down will grow the window's height.
#        bindsym h resize shrink width 10 px or 10 ppt
#        bindsym j resize grow height 10 px or 10 ppt
#        bindsym k resize shrink height 10 px or 10 ppt
#        bindsym l resize grow width 10 px or 10 ppt

# same bindings, but for the arrow keys
#        bindsym Left resize shrink width 10 px or 10 ppt
#        bindsym Down resize grow height 10 px or 10 ppt
#        bindsym Up resize shrink height 10 px or 10 ppt
#        bindsym Right resize grow width 10 px or 10 ppt

# back to normal: Enter or Escape
#	     bindsym Return mode "default"
#        bindsym Escape mode "default"
#}

#bindsym $mod+r mode "resize"

bindsym $mod+Return exec --no-startup-id kitty

# kill focused window
bindsym $mod+Shift+q kill

# exit-menu
bindsym $mod+Shift+e exec --no-startup-id ~/.config/i3/scripts/powermenu

# Lock the system
# lock with a picture:
bindsym $mod+l exec --no-startup-id i3lock -i  ~/.config/i3/i3-lock-screen.png -p default|win -t
# lock by blurring the screen:
#bindsym $mod+l exec --no-startup-id ~/.config/i3/scripts/blur-lock
# lock in case after sleep
exec --no-startup-id xss-lock -l ~/.config/i3/scripts/blur-lock

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Shift+r restart

# keybinding in fancy rofi (automated):
bindsym F1 exec --no-startup-id ~/.config/i3/scripts/keyhint-2
bindsym XF86MonBrightnessUp exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh brightness_up
bindsym XF86MonBrightnessDown exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh brightness_down

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+b focus up
bindsym $mod+o focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+b move up
bindsym $mod+Shift+o move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+g layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# open new empty workspace
bindsym $mod+Shift+n exec --no-startup-id ~/.config/i3/scripts/empty_workspace

# Multimedia Keys
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_up
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_down

# gradular volume control
bindsym $mod+XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym $mod+XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks

# mute
# use meta keys showing osc using dunst
bindsym XF86AudioMute exec --no-startup-id ~/.config/i3/scripts/volume_brightness.sh volume_mute

# mic mute toggle
bindsym XF86AudioMicMute exec amixer sset Capture toggle

# audio control
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause 
# Above line will also work for pausing
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Redirect sound to headphones
bindsym $mod+p exec --no-startup-id /usr/local/bin/switch-audio-port

## App shortcuts
bindsym $mod+w exec --no-startup-id /usr/bin/firefox
bindsym $mod+n exec --no-startup-id /usr/bin/thunar
bindsym $mod+Shift+s exec flameshot gui

# Power Profiles menu switcher (rofi)
bindsym $mod+Shift+p exec --no-startup-id ~/.config/i3/scripts/power-profiles

# Define names for default workspaces for which we configure key bindings later on.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
# bind program to workspace and focus to them on startup:
assign [class="kitty"] $ws1
assign [class="(?i)firefox"] $ws2
assign [class="Thunar"] $ws3
assign [class="obsidian"] $ws4
assign [class="TelegramDesktop"] $ws5

# automatic set focus new window if it opens on another workspace than the current:
for_window [class=kitty] focus
for_window [class=(?i)firefox] focus
for_window [class=Thunar] focus
for_window [class=obsidian] focus
for_window [class=TelegramDesktop] focus

#get auth work with polkit-gnome
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

exec --no-startup-id dex --autostart --environment i3

exec --no-startup-id ~/.screenlayout/monitor.sh

# set wallpaper
exec_always --no-startup-id sleep 1 && feh --bg-fill /home/scharan/Wallpapers/astronaut.png

# set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600
# Desktop notifications
exec --no-startup-id /usr/bin/dunst

# autotiling script
# `yay -S autotiling ;) (it is in AUR)
exec_always --no-startup-id autotiling

# Autostart apps as you like
exec --no-startup-id sleep 2 && kitty
exec --no-startup-id sleep 7 && firefox
exec --no-startup-id sleep 3 && thunar
exec --no-startup-id sleep 4 && obsidian

# start blueberry app for managing bluetooth devices from tray:
exec --no-startup-id blueberry-tray

# networkmanager-applet
#exec --no-startup-id nm-applet

# clipman-applet
exec --no-startup-id xfce4-clipman

# set floating (nontiling) for apps needing it
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable

# set floating (nontiling) for special apps
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable
for_window [window_role="About"] floating enable

# set border of floating window
for_window [class="urxvt"] border pixel 1

# Define colors variables:
# Catppuccin Mocha palette
set $base           #1e1e2e
set $mantle         #181825
set $crust          #11111b
set $text           #cdd6f4
set $subtext0       #a6adc8
set $subtext1       #bac2de
set $surface0       #313244
set $surface1       #45475a
set $surface2       #585b70
set $overlay0       #6c7086
set $overlay1       #7f849c
set $overlay2       #9399b2
set $blue           #89b4fa
set $lavender       #b4befe
set $sapphire       #74c7ec
set $sky            #89dceb
set $teal           #94e2d5
set $green          #a6e3a1
set $yellow         #f9e2af
set $peach          #fab387
set $maroon         #eba0ac
set $red            #f38ba8
set $mauve          #cba6f7
set $pink           #f5c2e7
set $flamingo       #f2cdcd
set $rosewater      #f5e0dc

# define colors for windows:
#class               border      bground     text        indicator   child_border
client.focused       $lavender   $base       $text       $mauve      $lavender
client.unfocused     $surface1   $base       $subtext0   $surface2   $surface1
client.focused_inactive $surface1  $base       $subtext0   $surface2   $surface1
client.urgent        $red        $red        $text       $red        $red

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
		font pango: JetBrainsMono Nerd Font 13
		status_command i3blocks -c ~/.config/i3/i3blocks.conf
	    	position top
#	    	i3bar_command i3bar --transparency
# it could be that you have no primary display set: set one (xrandr --output <output> --primary)
# reference: https://i3wm.org/docs/userguide.html#_tray_output
		    #tray_output primary
		    tray_padding 0

# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# "[n][:][NAME]" will display only the name.
strip_workspace_numbers yes
##strip_workspace_name no

		    colors {
		    separator          $mauve
		    background         $base
		    statusline         $text
#                          		border 		        bg		txt		indicator
		focused_workspace	$lavender         $lavender	$base		$mauve
		active_workspace	$blue             $surface1	$text		$mauve
		inactive_workspace	$surface1         $base   	$subtext0	$mauve
		urgent_workspace	$red              $red		$text		$mauve
	}
}

# you can add different bars for multidisplay setups on each display:
# set output HDMI-0 to the display you want the bar, --transparency can be set.
# Transparency needs rgba color codes to be used where the last two letters are the transparency factor see here:
# https://gist.github.com/lopspower/03fb1cc0ac9f32ef38f4
# #08052be6 --> e6=90%

## rofi bindings fancy application menu ($mod+d /F9 optional disabled)

bindsym $mod+d exec --no-startup-id rofi -modi drun -show drun \
		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F9 exec --no-startup-id rofi -modi drun -show drun \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings for window menu ($mod+t /F10 optional disabled)

bindsym $mod+t exec --no-startup-id rofi -show window \
		-config ~/.config/rofi/rofidmenu.rasi

#bindsym F10 exec --no-startup-id rofi -show window \
#		-config ~/.config/rofi/rofidmenu.rasi

## rofi bindings to manage clipboard (install rofi-greenclip from the AUR)

#exec --no-startup-id greenclip daemon>/dev/null
#bindsym $mod+c exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard \
#		-config ~/.config/rofi/rofidmenu.rasi
exec --no-startup-id picom --config ~/.config/picom/picom.conf -b
